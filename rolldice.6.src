.\" Man file for rolldice(6) - v__VERSION__ - 18 Dec 2012
.\" (c) Stevie Strickland, 1999-2012
.\"
.TH ROLLDICE 6 "18 Dec 2012" Linux
.SH NAME
rolldice \- rolls virtual dice
.SH SYNOPSIS
.B rolldice [
.I options
.B ]
.I [dice_string
.I [dice_string
.I ...]]
.SH DESCRIPTION
.B rolldice
rolls virtual dice.  The dice strings passed on the command line contain
information on the dice to roll in a format comparable to the format used in
most role playing games.
.P
If no dice strings are provided as command line arguments,
.B rolldice
uses stdin as input.
.SH OPTIONS
.RS
.IP -h,--help
returns the usage of diceroll
.IP -v,--version
returns the version of diceroll 
.IP -r,--random
uses /dev/random for random number generating
.IP -u,--urandom
uses /dev/urandom for random number generating (default)
.IP -s,--separate
prints out the result of each individual dice separately, as well as the
operations and totals 
.RE
.SH "DICE STRING FORMAT" 
The dice string uses the following format:
.RS
.IP {#x}{#}d[#|%]{*#}{+/-#}{s#}
.RE
.P
The dice string doesn't have to be in the exact format outlined above,
but this is the order I use.  It will try to parse any different
string containing the same sections in the best way it can, and will
throw out anything that isn't one of the sections below.
.P Now, to break this format down section by section:
.RS
.IP {#}d[#|%]
The first number is the
number of dice to roll, and the second number is the number of sides the
dice have.  The numbers rolled on each dice are then added up and given
as the result.  Hence 3d6 means "roll three six-sided dice, add them 
together and return the result".  If the first number is left out, then
the number of dice defaults to 1.  If the second number is not a number,
but a percentage sign (%), then the number of sides becomes 100 (for a
percentage roll).  If this is not included in the dice string, then the
default is 1d6.
.IP {#x}
This number describes how many times to roll.  For example, if you want to roll 3
6-sided dice 6 times, you use the dice string 6x3d6.  This returns six numbers,
corresponding to the six different rolls.
.IP {*#}
This number describes how many times to multiply the result of each roll.
3d6*100 returns a number in the range of 300-1800, because 3-18 is the
range for 3d6 and the result is then multipled by 100.
.IP {+/-#}
This number is the modifier to be added or subtracted, depending on the sign,
from each roll.  1d4+1 results in a range from 2-5 (1-4 for the dice, plus
1).  This step is handled *after* the multiplication modifier.
.IP {s#}
This number describes how many lowest dice rolls to drop.  This step is
handled *before* the multiplication modifier.
.RE
.P Any combination of the optional parts of the string may be used, but only
in the order show above.  For an extreme example, "3x4d6*5+1s2" would roll 
four six-sided dice, drop the lowest two, multiply the result by 5, add 1 to 
that, and repeat the process two more times, for a total of three results.
.SH DIAGNOSTICS
The following error messages may appear on STDERR:

Requested * is too large
.RS
Memory could not be allocated while parsing the string passed to the
.B rolldice
program 
.RE
Problems with the malformed dice string
.RS
The dice string contains a syntax error (see upper section DICE STRING FORMAT)
.RE
Unknown option
.RS
An unknown command-line option was provided
.RE

The exit values returned by 
.B rolldice
follow the BSD convention.
.SH AUTHOR
Stevie Strickland <sstrickl@ccs.neu.edu>
.SH VERSION
__VERSION__ - 18 Dec 2012
